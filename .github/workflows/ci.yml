name: CI Pipeline

on:
    push:
        tags: ["*"]
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:
        inputs: {}

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ vars.DOCKERHUB_TOKEN }}

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ vars.RELEASE_TOKEN }}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push
              run: echo TAG=${GITHUB_REF_NAME/\//-} >> $GITHUB_ENV
            - uses: docker/build-push-action@v6
              with:
                  platforms: linux/amd64,linux/arm64
                  outputs: type=${{ github.ref_type == 'tag' && 'registry' || 'cacheonly' }}
                  tags: |
                      ${{ github.repository }}:latest
                      ${{ github.repository }}:${{ env.TAG }}
                      ghcr.io/${{ github.repository }}:latest
                      ghcr.io/${{ github.repository }}:${{ env.TAG }}

    release:
        needs: build
        runs-on: ubuntu-latest
        if: github.ref_protected && !startsWith(github.event.head_commit.message, 'chore')
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  persist-credentials: false

            - name: Semantic Release
              run: cp .github/.releaserc.yml .
            - uses: cycjimmy/semantic-release-action@v4
              with:
                  extra_plugins: "@semantic-release/exec"
              env:
                  GITHUB_TOKEN: ${{ vars.RELEASE_TOKEN }}
                  GITHUB_API: ${{ github.api_url }}
